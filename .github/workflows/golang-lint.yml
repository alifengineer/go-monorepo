name: golangci-lint
on:
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: 'latest'

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      pull-requests: read
    outputs:
      auth: ${{ steps.filter.outputs.auth }}
      orders: ${{ steps.filter.outputs.orders }}
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            auth:
              - modules/auth/**/*.go
            orders:
              - modules/orders/**/*.go

      - name: Set modules
        id: set-modules
        run: |
          echo "📦 Поиск изменённых модулей..."
          
          modules=()
          REPO_ROOT=$(pwd)/modules
          
          if [[ "${{ steps.filter.outputs.auth }}" == "true" ]]; then
            modules+=("$REPO_ROOT/auth")
          fi
          
          if [[ "${{ steps.filter.outputs.orders }}" == "true" ]]; then
            modules+=("$REPO_ROOT/orders")
          fi
          
          if [[ ${#modules[@]} -eq 0 ]]; then
            echo "📦 Изменённых модулей не найдено"
            echo "modules=[]" >> $GITHUB_OUTPUT
          else
            modules=$(printf '%s\n' "${modules[@]}" | jq -R . | jq -s . | jq -c '.')
            echo "modules=$modules" >> $GITHUB_OUTPUT
            echo "📦 Изменённые модули: $modules"
          fi

  golangci:
    if: ${{ needs.detect-modules.outputs.modules != '[]' && needs.detect-modules.outputs.modules != '' }}
    timeout-minutes: 60
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: |
            ./go.sum

      - name: Verify dependencies
        run: go mod verify

      - name: golangci-lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.modules }}
          args: --timeout=10m --config=../.golangci.yml --out-format=colored-line-number